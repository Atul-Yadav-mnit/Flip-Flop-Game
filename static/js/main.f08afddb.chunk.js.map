{"version":3,"sources":["context/CardContext.js","components/FlipCards2.js","components/FlipCards4.js","components/FlipCard.js","components/Footer.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["CardContext","createContext","CardContextProvider","props","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","arr4","cards","value","id","isclicked","isEven","prev","initial","moves","temp","arr2","temp2","i","push","useState","type","data","Data","setData","Provider","handler2","handler4","resethandler","children","FlipCards2","useContext","map","card","Cards","setCards","useEffect","c","setTimeout","ans","alert","displayCards","className","style","height","backgroundColor","fontSize","color","textAlign","onClick","handleCardClick","width","src","alt","Button","FlipCards4","FlipCard","fd","Footer","position","left","bottom","class","href","NavBar","modal","setModal","toggle","Navbar","light","expand","NavbarBrand","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f08afddb.chunk.js","sourcesContent":["import React, { createContext,useState } from 'react'\r\nexport const CardContext = createContext();\r\n\r\n\r\nfunction CardContextProvider(props) {\r\n    \r\n\r\n    const shuffle = (array) => {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n      \r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n      \r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n      \r\n    \r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n      \r\n        return array;\r\n      }\r\n      \r\n      \r\n      \r\n\r\n    const arr4 = {\r\n        cards: [\r\n            { value: \"1\", id: \"1\", isclicked: false },\r\n            { value: \"7\", id: \"2\", isclicked: false },\r\n            { value: \"3\", id: \"3\", isclicked: false },\r\n            { value: \"2\", id: \"4\", isclicked: false },\r\n            { value: \"5\", id: \"5\", isclicked: false },\r\n            { value: \"5\", id: \"6\", isclicked: false },\r\n            { value: \"2\", id: \"7\", isclicked: false },\r\n            { value: \"6\", id: \"8\", isclicked: false },\r\n            { value: \"1\", id: \"9\", isclicked: false },\r\n            { value: \"6\", id: \"10\", isclicked: false },\r\n            { value: \"3\", id: \"11\", isclicked: false },\r\n            { value: \"7\", id: \"12\", isclicked: false },\r\n            { value: \"8\", id: \"13\", isclicked: false },\r\n            { value: \"4\", id: \"14\", isclicked: false },\r\n            { value: \"8\", id: \"15\", isclicked: false },\r\n            { value: \"4\", id: \"16\", isclicked: false }\r\n        ],\r\n        isEven: false,\r\n        prev: null,\r\n        initial: true,\r\n        moves: 20,\r\n        temp : false\r\n    };\r\n\r\n\r\n    var arr2 = {\r\n        cards: [\r\n            { value: \"1\", id: \"1\", isclicked: false },\r\n            { value: \"2\", id: \"2\", isclicked: false },\r\n            { value: \"1\", id: \"3\", isclicked: false },\r\n            { value: \"2\", id: \"4\", isclicked: false }\r\n        ],\r\n        isEven: false,\r\n        prev: null,\r\n        initial: true,\r\n        moves: 3,\r\n        temp:false\r\n    };\r\n\r\n\r\n  //  console.log(\"Before shuffling\" ,arr2.cards);\r\n    shuffle(arr2.cards);\r\n  //  console.log(\"After shuffling\" ,arr2.cards);\r\n   \r\n        var temp2 = [];\r\n        for(var i=0;i<arr2.cards.length;i++)\r\n        {\r\n            temp2.push({...arr2.cards[i]})\r\n        }\r\n    //    console.log(temp2,\"temp of initial\")\r\n        const [Data, setData] = useState({\r\n            type: '2',\r\n            data: {...arr2, cards:temp2 }\r\n        });\r\n    \r\n    \r\n    const handler2 = () =>{\r\n       // console.log(\"Here at handler2\")\r\n            var temp = [];\r\n            shuffle(arr2.cards);\r\n            for(var i=0;i<arr2.cards.length;i++)\r\n            {\r\n                temp.push({...arr2.cards[i]})\r\n            }\r\n         //   console.log(temp,\"temp\")\r\n            setData({type:'2',data:{...arr2,cards:temp}})\r\n    };\r\n\r\n    const handler4 = () => {\r\n        var temp = [];\r\n        shuffle(arr4.cards);\r\n        for(var i=0;i<arr4.cards.length;i++)\r\n        {\r\n            temp.push({...arr4.cards[i]})\r\n        }\r\n       // console.log(temp,\"temp\")\r\n        setData({type:'4',data:{...arr4,cards:temp}})\r\n    };\r\n\r\n    const resethandler = () => {\r\n        if(Data.type === '2')\r\n        {\r\n           // console.log(\"Here at resethandler\")\r\n            var temp = [];\r\n            shuffle(arr2.cards);\r\n            for(var i=0;i<arr2.cards.length;i++)\r\n            {\r\n                temp.push({...arr2.cards[i]})\r\n            }\r\n           // console.log(temp,\"temp of reset\")\r\n            setData({type:'2',data:{...arr2,cards:temp}})\r\n        }\r\n        else{\r\n            //console.log(\"Here at resethandler\")\r\n            var temp = [];\r\n            shuffle(arr4.cards);\r\n            for(var i=0;i<arr4.cards.length;i++)\r\n            {\r\n                temp.push({...arr4.cards[i]})\r\n            }\r\n           // console.log(temp,\"temp of reset\")\r\n            setData({type:'4',data:{...arr4,cards:temp}})\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <CardContext.Provider value={{Data, handler2, handler4, resethandler}}>\r\n            {props.children}\r\n        </CardContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CardContextProvider;","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { CardContext } from '../context/CardContext'\r\n\r\nfunction FlipCards2() {\r\n    var { Data, resethandler } = useContext(CardContext)\r\n    const [Cards, setCards] = useState({...Data.data, cards : Data.data.cards.map((card) => {\r\n        return {...card};\r\n    })})\r\n    // console.log(Data.data, \" initial ones\")\r\n\r\n    const handleCardClick = (card) => {\r\n        //  console.log(card)\r\n        if (Cards.isEven === true) {\r\n            if (card.value !== Cards.prev.value) {\r\n                setCards({\r\n                    ...Cards, cards: Cards.cards.map((c) => {\r\n                        if (c.id === card.id) {\r\n                            c.isclicked = true;\r\n                        }\r\n                        return {...c};\r\n                    })\r\n                    , temp: true\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    setCards({\r\n                        ...Cards, cards: Cards.cards.map((c) => {\r\n                            if (c.id === Cards.prev.id || c.id === card.id) {\r\n                                c.isclicked = false;\r\n                            }\r\n                            return {...c};\r\n                        }), isEven: false, prev: null, moves: Cards.moves - 1, temp: false\r\n                    })\r\n                }, 100);\r\n\r\n            }\r\n            else {\r\n                setCards({\r\n                    ...Cards, cards: Cards.cards.map((c) => {\r\n                        if (c.id === card.id) {\r\n                            c.isclicked = true;\r\n                        }\r\n                        return {...c};\r\n                    }), isEven: false, prev: null, moves: Cards.moves - 1\r\n                })\r\n            }\r\n\r\n        }\r\n        else {\r\n            setCards({\r\n                ...Cards, cards: Cards.cards.map((c) => {\r\n                    if (c.id === card.id) {\r\n                        c.isclicked = true;\r\n                    }\r\n                    return {...c};\r\n                }), isEven: true, prev: card\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        if (Cards.initial === true) {\r\n            var temp = Cards.cards.map((c) => {\r\n                return {...c};\r\n            })\r\n            setTimeout(() => {\r\n                setCards({ ...Cards, initial: false , cards:temp})\r\n            }, 2000);\r\n        }\r\n\r\n        else if (Cards.moves === 0 && Cards.temp === false) {\r\n            var ans = true;\r\n            var temp = Cards.cards.map((c) => {\r\n                if (c.isclicked === false) {\r\n                    ans = false;\r\n                }\r\n                return {...c};\r\n            })\r\n            if (ans === true) {\r\n                resethandler();\r\n                setCards({...Data.data, cards : Data.data.cards.map((card) => {\r\n                    return {...card};\r\n                })})\r\n                alert(\"Hurray! You won:)\");\r\n            }\r\n            else {\r\n                resethandler();\r\n                setCards({...Data.data, cards : Data.data.cards.map((card) => {\r\n                    return {...card};\r\n                })})\r\n                alert(\"Sorry!!! You loose:(\");\r\n            }\r\n        }\r\n        else {\r\n            var ans = true;\r\n            var temp = Cards.cards.map((c) => {\r\n                if (c.isclicked === false) {\r\n                    ans = false;\r\n                }\r\n                return {...c};\r\n            })\r\n            if (ans === true) {\r\n                resethandler();\r\n                setCards({...Data.data, cards : Data.data.cards.map((card) => {\r\n                    return {...card};\r\n                })})\r\n                alert(\"Hurray! You won:)\");\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n    const displayCards = Cards.initial === true ?\r\n        Cards.cards.map((card) => {\r\n            return (\r\n                <div className=\"col-5 mr-2 mt-3\" style={{ height: \"200px\", backgroundColor: \"rgb(0, 33, 51)\" }}>\r\n\r\n                    <p style={{ fontSize: \"100px\", color: \"rgb(255,255,255)\", textAlign: \"center\" }}>{card.value}</p>\r\n\r\n                </div>\r\n            )\r\n        })\r\n        :\r\n        Cards.cards.map((card) => {\r\n            if (card.isclicked === true) {\r\n                return (\r\n                    <div className=\"col-5 mr-2 mt-3\" style={{ height: \"200px\", backgroundColor: \"rgb(0, 33, 51)\" }}>\r\n                        <p style={{ fontSize: \"100px\", color: \"rgb(255,255,255)\", textAlign: \"center\" }}>{card.value}</p>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div className=\"col-5 mr-2 ml-2 mt-3\" style={{ height: \"200px\" }} onClick={() => handleCardClick(card)}>\r\n                        <img width=\"100%\" height=\"100%\" src=\"assets/cardImg.jpg\" alt=\"Card image cap\" />\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n        const resethandler2 = () => {\r\n            resethandler();\r\n            setCards({...Data.data, cards : Data.data.cards.map((card) => {\r\n                return {...card};\r\n            })})\r\n        }\r\n\r\n       // console.log(\" fired \", Cards)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Button className=\"mt-3\">Moves Left: {Cards.moves}</Button>{' '}\r\n            <Button className=\"mt-3\" color=\"info\" onClick={resethandler2}>Reset</Button>\r\n            <div className=\"row mt-3\">\r\n                {displayCards}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlipCards2\r\n\r\n\r\n\r\n/*\r\n\r\nconst displayCards = Even.initial === true ?\r\n    Cards.map((card) => {\r\n        return(\r\n            <div className=\"col-5 mr-2 mt-3\" >\r\n            <Card id={card.id}>\r\n            <CardTitle>{card.value}</CardTitle>\r\n            </Card>\r\n            </div>\r\n        )\r\n    })\r\n    :Cards.map((card) => {\r\n        if(card.isclicked === true)\r\n        {\r\n            return(\r\n                <div className=\"col-5 mr-2 ml-2 mt-3 p-1\" style={{  height:\"200px\"}}>\r\n                {card.value}\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"col-5 mr-2 ml-2 mt-3\" style={{ height:\"200px\"}} onClick={() => handleCardClick(card)}>\r\n                    <img width=\"100%\"  height=\"100%\" src=\"assets/cardImg.jpg\" alt=\"Card image cap\" />\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n\r\n    if(Even.initial === true)\r\n    {\r\n        setTimeout(() => {\r\n            console.log(\"herereererere\")\r\n            setEven({...Even,initial:false})\r\n        }, 5000);\r\n        console.log(\"herereererere\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Button className=\"mt-3\">Moves Left: {Moves.moves}</Button>\r\n           <div className=\"row mt-3\">\r\n               <div className=\"col-3\"></div>\r\n               <div className=\"col-6\">\r\n                   <div className = \"row\">\r\n                    {displayCards}\r\n                   </div>\r\n               </div>\r\n               <div className=\"col-3\"></div>\r\n           </div>\r\n\r\n          </div>\r\n\r\n    )\r\n}\r\n*/","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { CardContext } from '../context/CardContext'\r\n\r\nfunction FlipCards4() {\r\n    var { Data, resethandler } = useContext(CardContext)\r\n    const [Cards, setCards] = useState({...Data.data, cards : Data.data.cards.map((card) => {\r\n        return {...card};\r\n    })})\r\n    //console.log(Data.data, \" initial ones\")\r\n\r\n    const handleCardClick = (card) => {\r\n        //  console.log(card)\r\n        if (Cards.isEven === true) {\r\n            if (card.value !== Cards.prev.value) {\r\n                setCards({\r\n                    ...Cards, cards: Cards.cards.map((c) => {\r\n                        if (c.id === card.id) {\r\n                            c.isclicked = true;\r\n                        }\r\n                        return {...c};\r\n                    })\r\n                    , temp: true\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    setCards({\r\n                        ...Cards, cards: Cards.cards.map((c) => {\r\n                            if (c.id === Cards.prev.id || c.id === card.id) {\r\n                                c.isclicked = false;\r\n                            }\r\n                            return {...c};\r\n                        }), isEven: false, prev: null, moves: Cards.moves - 1, temp: false\r\n                    })\r\n                }, 100);\r\n\r\n            }\r\n            else {\r\n                setCards({\r\n                    ...Cards, cards: Cards.cards.map((c) => {\r\n                        if (c.id === card.id) {\r\n                            c.isclicked = true;\r\n                        }\r\n                        return {...c};\r\n                    }), isEven: false, prev: null, moves: Cards.moves - 1\r\n                })\r\n            }\r\n\r\n        }\r\n        else {\r\n            setCards({\r\n                ...Cards, cards: Cards.cards.map((c) => {\r\n                    if (c.id === card.id) {\r\n                        c.isclicked = true;\r\n                    }\r\n                    return {...c};\r\n                }), isEven: true, prev: card\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        if (Cards.initial === true) {\r\n            var temp = Cards.cards.map((c) => {\r\n                return {...c};\r\n            })\r\n            setTimeout(() => {\r\n                setCards({ ...Cards, initial: false , cards:temp})\r\n            }, 2000);\r\n        }\r\n\r\n        else if (Cards.moves === 0 && Cards.temp === false) {\r\n            var ans = true;\r\n            var temp = Cards.cards.map((c) => {\r\n                if (c.isclicked === false) {\r\n                    ans = false;\r\n                }\r\n                return {...c};\r\n            })\r\n            if (ans === true) {\r\n                resethandler();\r\n                setCards({...Data.data, cards : Data.data.cards.map((card) => {\r\n                    return {...card};\r\n                })})\r\n                alert(\"Hurray! You won:)\");\r\n            }\r\n            else {\r\n                resethandler();\r\n                setCards({...Data.data, cards : Data.data.cards.map((card) => {\r\n                    return {...card};\r\n                })})\r\n                alert(\"Sorry!!! You loose:(\");\r\n            }\r\n        }\r\n        else {\r\n            var ans = true;\r\n            var temp = Cards.cards.map((c) => {\r\n                if (c.isclicked === false) {\r\n                    ans = false;\r\n                }\r\n                return {...c};\r\n            })\r\n            if (ans === true) {\r\n                resethandler();\r\n                setCards({...Data.data, cards : Data.data.cards.map((card) => {\r\n                    return {...card};\r\n                })})\r\n                alert(\"Hurray! You won:)\");\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n    const displayCards = Cards.initial === true ?\r\n        Cards.cards.map((card) => {\r\n            return (\r\n                <div className=\"col-md-2 col-4 ml-4 mr-4 mb-3\" style={{ height: \"100px\",backgroundColor:\"rgb(0, 33, 51)\" }}>\r\n                    <p style={{fontSize:\"50px\", color:\"rgb(255,255,255)\",textAlign:\"center\"}}>{card.value}</p>\r\n                </div>\r\n            )\r\n        })\r\n        :\r\n        Cards.cards.map((card) => {\r\n            if (card.isclicked === true) {\r\n                return (\r\n                    <div className=\"col-md-2 col-4 ml-4 mr-4 mb-3\" style={{ height: \"100px\",backgroundColor:\"rgb(0, 33, 51)\" }}>\r\n                    <p style={{fontSize:\"50px\", color:\"rgb(255,255,255)\",textAlign:\"center\"}}>{card.value}</p>\r\n                </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div className=\"col-md-2 col-4 ml-4 mr-4 mb-3\" style={{ height: \"100px\" }} onClick={() => handleCardClick(card)}>\r\n                        <img width=\"100%\" height=\"100\" src=\"assets/cardImg.jpg\" alt=\"Card image cap\" />\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n        const resethandler2 = () => {\r\n            resethandler();\r\n            setCards({...Data.data, cards : Data.data.cards.map((card) => {\r\n                return {...card};\r\n            })})\r\n        }\r\n\r\n        //console.log(\" fired \", Cards)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Button className=\"mt-3\">Moves Left: {Cards.moves}</Button>{' '}\r\n            <Button className=\"mt-3\" color=\"info\" onClick={resethandler2}>Reset</Button>\r\n            <div className=\"row mt-3\">\r\n                {displayCards}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n export default FlipCards4\r\n\r\n\r\n// import React, { useState, useEffect, useContext } from 'react'\r\n// import {Button } from 'reactstrap'\r\n// import { CardContext } from '../context/CardContext'\r\n\r\n// function FlipCards4() {\r\n//     const {Data} = useContext(CardContext)\r\n//     const [Cards, setCards] = useState(Data.data)\r\n\r\n//     const handleCardClick = (card) => {\r\n//         //  console.log(card)\r\n//         if (Cards.isEven === true) {\r\n//             if (card.value !== Cards.prev.value) {\r\n//                     setCards({\r\n//                     ...Cards, cards: Cards.cards.map((c) => {\r\n//                         if (c.id === card.id) {\r\n//                             c.isclicked = true;\r\n//                         }\r\n//                         return c;\r\n//                     })\r\n//                 ,temp:true})\r\n                             \r\n//                 setTimeout(() => {\r\n//                     setCards({\r\n//                         ...Cards, cards: Cards.cards.map((c) => {\r\n//                             if (c.id === Cards.prev.id || c.id === card.id) {\r\n//                                 c.isclicked = false;\r\n//                             }\r\n//                             return c;\r\n//                         }), isEven: false, prev: null, moves: Cards.moves - 1\r\n//                     ,temp:false})\r\n//                 }, 100);\r\n                \r\n//             }\r\n//             else {\r\n//                 setCards({\r\n//                     ...Cards, cards: Cards.cards.map((c) => {\r\n//                         if (c.id === card.id) {\r\n//                             c.isclicked = true;\r\n//                         }\r\n//                         return c;\r\n//                     }), isEven: false, prev: null, moves: Cards.moves - 1\r\n//                 })\r\n//             }\r\n\r\n//         }\r\n//         else {\r\n//             setCards({\r\n//                 ...Cards, cards: Cards.cards.map((c) => {\r\n//                     if (c.id === card.id) {\r\n//                         c.isclicked = true;\r\n//                     }\r\n//                     return c;\r\n//                 }), isEven: true, prev: card\r\n//             })\r\n\r\n//         }\r\n\r\n//     }\r\n\r\n//     console.log(\" fired \", Cards)\r\n\r\n//     useEffect(() => {\r\n//         if (Cards.initial === true) {\r\n//             setTimeout(() => {\r\n//                 setCards({ ...Cards, initial: false })\r\n//             }, 2000);\r\n//         }\r\n\r\n//         else if (Cards.moves === 0 && Cards.temp === false) {\r\n//             var ans = true;\r\n//             Cards.cards.map((c) => {\r\n//                 if (c.isclicked === false) {\r\n//                     ans = false;\r\n//                 }\r\n//                 return c;\r\n//             })\r\n//             if (ans === true) {\r\n//                 setCards({\r\n//                     ...Cards, cards: Cards.cards.map((c) => {\r\n//                         c.isclicked = false;\r\n//                         return c;\r\n//                     }), isEven: false, prev: null, moves: 20, initial: true\r\n//                 })\r\n//                 alert(\"Hurray! You won:)\");\r\n//             }\r\n//             else {\r\n//                 setCards({\r\n//                     ...Cards, cards: Cards.cards.map((c) => {\r\n//                         c.isclicked = false;\r\n//                         return c;\r\n//                     }), isEven: false, prev: null, moves: 20, initial: true\r\n//                 })\r\n//                 alert(\"Sorry!!! You loose:(\");\r\n//             }\r\n//         }\r\n//         else {\r\n//             var ans = true;\r\n//             Cards.cards.map((c) => {\r\n//                 if (c.isclicked === false) {\r\n//                     ans = false;\r\n//                 }\r\n//                 return c;\r\n//             })\r\n//             if (ans === true) {\r\n//                 setCards({\r\n//                     ...Cards, cards: Cards.cards.map((c) => {\r\n//                         c.isclicked = false;\r\n//                         return c;\r\n//                     }), isEven: false, prev: null, moves: 20, initial: true\r\n//                 })\r\n//                 alert(\"Hurray! You won:)\");\r\n//             }\r\n//         }\r\n\r\n//     })\r\n\r\n//     const displayCards = Cards.initial === true ?\r\n//         Cards.cards.map((card) => {\r\n//             return (\r\n//                 <div className=\"col-md-2 col-4 ml-4 mr-4 mb-3\" style={{ height: \"100px\",backgroundColor:\"rgb(0, 33, 51)\" }}>\r\n//                     <p style={{fontSize:\"50px\", color:\"rgb(255,255,255)\",textAlign:\"center\"}}>{card.value}</p>\r\n//                 </div>\r\n//             )\r\n//         })\r\n//         :\r\n//         Cards.cards.map((card) => {\r\n//             if (card.isclicked === true) {\r\n//                 return (\r\n//                     <div className=\"col-md-2 col-4 ml-4 mr-4 mb-3\" style={{ height: \"100px\",backgroundColor:\"rgb(0, 33, 51)\" }}>\r\n//                     <p style={{fontSize:\"50px\", color:\"rgb(255,255,255)\",textAlign:\"center\"}}>{card.value}</p>\r\n//                 </div>\r\n//                 )\r\n//             }\r\n//             else {\r\n//                 return (\r\n//                     <div className=\"col-md-2 col-4 ml-4 mr-4 mb-3\" style={{ height: \"100px\" }} onClick={() => handleCardClick(card)}>\r\n//                         <img width=\"100%\" height=\"100\" src=\"assets/cardImg.jpg\" alt=\"Card image cap\" />\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//         })\r\n\r\n\r\n//         const resethandler = () => {\r\n//             setCards(Data.data)\r\n//         }\r\n\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <Button className=\"mt-3\">Moves Left: {Cards.moves}</Button>{' '}\r\n//             <Button className=\"mt-3\" color=\"info\" onClick={resethandler}>Reset</Button>\r\n//             <div className=\"row mt-3\">\r\n//                 {displayCards}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default FlipCards4\r\n// /*\r\n// {\r\n//         cards: [\r\n//             { value: \"1\", id: \"1\", isclicked: false },\r\n//             { value: \"7\", id: \"2\", isclicked: false },\r\n//             { value: \"3\", id: \"3\", isclicked: false },\r\n//             { value: \"2\", id: \"4\", isclicked: false },\r\n//             { value: \"5\", id: \"5\", isclicked: false },\r\n//             { value: \"5\", id: \"6\", isclicked: false },\r\n//             { value: \"2\", id: \"7\", isclicked: false },\r\n//             { value: \"6\", id: \"8\", isclicked: false },\r\n//             { value: \"1\", id: \"9\", isclicked: false },\r\n//             { value: \"6\", id: \"10\", isclicked: false },\r\n//             { value: \"3\", id: \"11\", isclicked: false },\r\n//             { value: \"7\", id: \"12\", isclicked: false },\r\n//             { value: \"8\", id: \"13\", isclicked: false },\r\n//             { value: \"4\", id: \"14\", isclicked: false },\r\n//             { value: \"8\", id: \"15\", isclicked: false },\r\n//             { value: \"4\", id: \"16\", isclicked: false }\r\n//         ],\r\n//         isEven: false,\r\n//         prev: null,\r\n//         initial: true,\r\n//         moves: 20\r\n//     }\r\n\r\n// */","import {useContext} from 'react'\r\nimport { CardContext } from '../context/CardContext'\r\nimport FlipCard2 from './FlipCards2'\r\nimport FlipCard4 from './FlipCards4'\r\n\r\nfunction FlipCard() {\r\n    const {Data} = useContext(CardContext)\r\n    const fd = Data.type === '2' ? <FlipCard2/>:<FlipCard4/>\r\n    //console.log(\"New Data is \",Data);\r\n    return (\r\n        <div>\r\n            {fd}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlipCard\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"text-center p-1 mt-4\" style={{backgroundColor: 'rgba(0, 0, 0, 0.25)',position:\"fixed\",\r\n        left: 0,\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        textAlign : \"center\"}}>\r\n              © 2021 Copyright:\r\n              <a class=\"text-dark\" href=\"https://www.instagram.com/atulydv1364/\"> Made with ❤️ by @atulydv1364</a>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nexport default Footer\r\n","import React, { useContext,useState } from 'react';\r\nimport {Button,Navbar,NavbarBrand,Modal,ModalBody,ModalHeader,ModalFooter} from 'reactstrap';\r\nimport { CardContext } from '../context/CardContext';\r\n\r\nconst NavBar = () => {\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const {handler2, handler4}= useContext(CardContext)\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" light expand=\"md\">\r\n        <NavbarBrand style={{color:\"white\"}} href=\"/\">FlipFlop-Game</NavbarBrand>\r\n        <div className=\"ml-auto\">\r\n        <Button color=\"secondary\" onClick={handler2}>2*2</Button>{' '}\r\n      <Button color=\"success\" onClick={handler4}>4*4</Button>{' '}\r\n      <Button color=\"info\" onClick={toggle}>How to Play??</Button>\r\n      <div>\r\n      <Modal isOpen={modal} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>Rules</ModalHeader>\r\n        <ModalBody>\r\n          <p>* Choose the size of matrix from the navigation bar</p>\r\n          <p>* Initially some numbers would be shown to you on screen. See them carefully!!!</p>\r\n          <p>* After the numbers are covererd by a image, start matching the numbers in pair.</p>\r\n          <p>* Dont forget to keep an eye on the number of moves remaining.</p>\r\n          <p>* So Lets Play</p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"info\" onClick={toggle}>Ready to Go</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n\r\n        </div>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import './App.css';\nimport FlipCard from './components/FlipCard';\nimport Footer from './components/Footer'\nimport NavBar from './components/Navbar';\nimport CardContextProvider from './context/CardContext';\n\n\nfunction App() {\n  return (\n    <div>\n      <CardContextProvider>\n      <NavBar/>\n      <FlipCard/>\n      </CardContextProvider>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}